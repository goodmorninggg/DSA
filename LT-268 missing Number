class Solution {//cyclic sort
public int missingNumber(int[] nums) {
        int i=0;
        while(i<nums.length){
            int correct=nums[i];//0 to n
            if (nums[i]<nums.length && nums[i] != nums[correct]) {
                swapped(nums,i,correct);
                }
            else
                i++;

        }   
        //case 2
        //seach the missing number and return the last number if no missing element
        for (int index=0;index<nums.length;index++){
            if(nums[index]!=index){
                return index;
            }
        }
        return nums.length;
    }

    public void swapped(int []nums,int first,int last){
        int temp = nums[first];
        nums[first] = nums[last];
        nums[last] = temp;
    }

}
